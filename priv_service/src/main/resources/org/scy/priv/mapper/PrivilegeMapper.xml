<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scy.priv.mapper.PrivilegeMapper">

    <!-- getByUserId -->
    <select id="getByUserId" resultType="PrivilegeModel">
        select * from `privs` where userId = #{userId}
    </select>

    <!-- getByGroupId -->
    <select id="getByGroupId" resultType="PrivilegeModel">
        select * from `privs` where groupId = #{groupId}
    </select>

    <!-- getByRoleId -->
    <select id="getByRoleId" resultType="PrivilegeModel">
        select * from `privs` where roleId = #{roleId}
    </select>

    <!-- getByModuleId -->
    <select id="getByModuleId" resultType="PrivilegeModel">
        select * from `privs` where moduleId = #{moduleId}
    </select>

    <!-- add -->
    <insert id="add" parameterType="PrivilegeModel" useGeneratedKeys="true" keyProperty="id">
        insert into `privs` (moduleId, userId, groupId, roleId, grantType, state, creatorId, createTime, paasId)
        values (#{moduleId}, #{userId}, #{groupId}, #{roleId}, #{grantType}, #{state},
            #{creatorId}, #{createTime}, #{paasId})
    </insert>

    <!-- deleteById -->
    <delete id="deleteById">
        delete from `privs` where id = #{id}
    </delete>

    <!-- deleteByIds -->
    <delete id="deleteByIds">
        delete from `privs` where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- deleteByUserId -->
    <delete id="deleteByUserId">
        delete from `privs` where userId in
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <!-- deleteByGroupId -->
    <delete id="deleteByGroupId">
        delete from `privs` where groupId in
        <foreach collection="groupIds" item="groupId" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </delete>

    <!-- deleteByRoleId -->
    <delete id="deleteByRoleId">
        delete from `privs` where roleId in
        <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <!-- deleteByModuleId -->
    <delete id="deleteByModuleId">
        delete from `privs` where moduleId in
        <foreach collection="moduleIds" item="moduleId" open="(" separator="," close=")">
            #{moduleId}
        </foreach>
    </delete>

    <!-- getUserPrivsAll -->
    <select id="getUserPrivsAll" resultType="PrivilegeModel">
        select * from `user_privs` where userId = #{userId}
    </select>

    <!-- getUserPrivsByModuleIds -->
    <select id="getUserPrivsByModuleIds" resultType="PrivilegeModel">
        select * from `user_privs` where userId = #{userId} and moduleId in
        <foreach collection="moduleIds" item="moduleId" open="(" separator="," close=")">
            #{moduleId}
        </foreach>
    </select>

    <!-- getUserPrivsByModuleCodes -->
    <select id="getUserPrivsByModuleCodes" resultType="PrivilegeModel">
        select up.* from `user_privs` as up, `module` as m
        where up.moduleId = m.id and up.userId = #{userId} and m.code in
        <foreach collection="moduleCodes" item="moduleCode" open="(" separator="," close=")">
            #{moduleCode}
        </foreach>
    </select>

    <!-- getUserPrivsByModuleNames -->
    <select id="getUserPrivsByModuleNames" resultType="PrivilegeModel">
        select up.* from `user_privs` as up, `module` as m
        where up.moduleId = m.id and up.userId = #{userId} and m.name in
        <foreach collection="moduleNames" item="moduleName" open="(" separator="," close=")">
            #{moduleName}
        </foreach>
    </select>

    <!-- addUserPriv -->
    <insert id="addUserPriv" parameterType="PrivilegeModel" useGeneratedKeys="true" keyProperty="id">
        insert into `user_privs` (userId, moduleId, grantType, paasId)
        values (#{userId}, #{moduleId}, #{grantType}, #{paasId})
    </insert>

    <!-- deleteUserPrivs -->
    <delete id="deleteUserPrivs">
        delete from `user_privs` where userId = #{userId}
    </delete>

</mapper>