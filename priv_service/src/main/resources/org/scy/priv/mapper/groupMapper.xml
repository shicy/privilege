<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scy.priv.mapper.GroupMapper">

    <!-- getById -->
    <select id="getById" resultType="GroupModel">
        select * from `group` where id = ${id} and state > 0 limit 1
    </select>

    <!-- getByName -->
    <select id="getByName" resultType="GroupModel">
        select * from `group` where name = #{name} and paasId = #{paasId} and state > 0 limit 1
    </select>

    <!-- add -->
    <insert id="add" parameterType="GroupModel" useGeneratedKeys="true" keyProperty="id">
        insert into `group` (name, remark, state, creatorId, createTime, paasId)
        values (#{name}, #{remark}, #{state}, #{creatorId}, #{createTime}, #{paasId})
    </insert>

    <!-- update -->
    <update id="update" parameterType="GroupModel">
        update `group`
        set name = #{name}, remark = #{remark}, state = #{state},
            updatorId = #{updatorId}, updateTime = #{updateTime}
        where id = ${id}
    </update>

    <!-- delete -->
    <update id="delete" parameterType="GroupModel">
        update `group`
        set state = 0, updatorId = #{updatorId}, updateTime = #{updateTime}
        where id = ${id}
    </update>

    <!-- find -->
    <select id="find" parameterType="org.scy.common.ds.query.Selector" resultType="GroupModel">
        select * from `group` ${where} ${orderBy} ${groupBy} #{limit}
    </select>

    <!-- countFind -->
    <select id="countFind" parameterType="org.scy.common.ds.query.Selector" resultType="Integer">
        select count(id) as count from `group` ${where} ${orderBy} ${groupBy}
    </select>

</mapper>